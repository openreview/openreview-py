# This workflow deploys any branch, tag, or commit hash to the production environment.

name: Production Deployment API V1

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: The branch, tag, or commit hash to deploy
        required: false
        default: master
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/997553930042/locations/global/workloadIdentityPools/github-identity-pool/providers/github-identity-provider
          service_account: github-actions@sunlit-realm-131518.iam.gserviceaccount.com
          create_credentials_file: true
          cleanup_credentials: true
          export_environment_variables: true
      - name: Run deploy script
        run: |
          gsutil cp gs://openreview-general/conf/deployment.conf ./deployment.conf
          sed -i "s/OPENREVIEW_PY_TAG=.*/OPENREVIEW_PY_TAG=\"$TAG\"/" ./deployment.conf
          gsutil cp ./deployment.conf gs://openreview-general/conf/deployment.conf

          instance_prefix='openreview-api-'

          instances=$(gcloud compute instances list | grep "$instance_prefix" | grep RUNNING | tr -s ' ' | cut -d' ' -f1,2)

          instances_arr=(${instances// / })

          instance_names=()
          zones=()
          for i in ${!instances_arr[@]}; do
            if echo "${instances_arr[$i]}" | grep -q "$instance_prefix"; then
              instance_names+=(${instances_arr[$i]})
            else
              zones+=(${instances_arr[$i]})
            fi
          done

          for i in ${!instance_names[@]}; do
            echo Deploying to ${instance_names[$i]}
            gcloud compute ssh --zone ${zones[$i]} openreview@${instance_names[$i]} --command "bash bin/deploy-openreview-py.sh ${TAG}"
          done
