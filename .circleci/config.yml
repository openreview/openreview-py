version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5

parameters:
  openreview-api-v1-branch:
    type: string
    default: "master"
  openreview-api-v2-branch:
    type: string
    default: "feature/messages-with-invitation"

jobs:
  build:
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
    parallelism: 10
    working_directory: ~/openreview-py-repo
    docker:
      - image: cimg/python:3.10.13-node
      - image: cimg/redis:6.2.6
      - image: mongo:6.0
        command: [ --replSet, rs0 ]
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        environment:
          xpack.security.enabled: false
          transport.host: localhost
    steps:
      - checkout
      - run:
          name: Initialize replica set
          command: |
            sudo apt-get install gnupg curl
            curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
            echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y mongodb-org=6.0.7
            mongosh mongodb://localhost:27017 --eval "rs.initiate()"
      - run:
          name: Install openreview-py
          command: |
            pip install ~/openreview-py-repo
      - run:
          name: Clone OpenReview API V1 branch << pipeline.parameters.openreview-api-v1-branch >>
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-api-v1.git ~/openreview
            cd ~/openreview && git checkout << pipeline.parameters.openreview-api-v1-branch >>
      - run:
          name: Clone OpenReview API V2 branch << pipeline.parameters.openreview-api-v2-branch >>
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-api.git ~/openreview-v2
            cd ~/openreview-v2 && git checkout << pipeline.parameters.openreview-api-v2-branch >>
      - run:
          name: Clone openreview-web
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-web.git ~/openreview-web
      - run:
          name: Create API directories
          command: |
            mkdir -p ~/openreview/logs
            mkdir -p ~/openreview/files/attachments
            mkdir -p ~/openreview/files/pdfs
            mkdir -p ~/openreview/files/temp
            mkdir -p ~/openreview-v2/logs
            mkdir -p ~/openreview-v2/files/attachments
            mkdir -p ~/openreview-v2/files/pdfs
            mkdir -p ~/openreview-v2/files/temp
            mkdir -p ~/openreview-py-repo/coverage
      - run:
          # source: https://support.mozilla.org/en-US/kb/install-firefox-linux#w_system-firefox-installation-for-advanced-users
          # source: https://ubuntu-mate.community/t/firefox-installation-guide-non-snap/25299
          name: Install Firefox
          command: |
            wget "https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US" -O firefox-latest.tar.bz2
            tar xjf firefox-*.tar.bz2
            sudo mv firefox /opt
            sudo ln -s /opt/firefox/firefox /usr/local/bin/firefox
            sudo apt-get install libgtk-3-0
            sudo apt-get install libasound2
            sudo apt-get install libdbus-glib-1-2
            echo export PATH="$PATH:/usr/local/bin/firefox" >> ~/.bashrc
            source ~/.bashrc
      - run:
          name: Start API V1
          command: |
            cd ~/openreview
            npm run cleanStart
          background: true
      - run:
          name: Wait for API V1 to start
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=2 --read-timeout=20 --timeout=150 http://localhost:3000
            :
      - run:
          name: Start API V2
          command: |
            cd ~/openreview-v2
            npm run cleanStart
          background: true
      - run:
          name: Wait for API V2 to start
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=2 --read-timeout=20 --timeout=150 http://localhost:3001
            :
      - run:
          name: Install openreview-web
          command: |
            cd ~/openreview-web
            npm install
            cp .env.example .env.local
            NODE_ENV=production SUPER_USER=openreview.net npm run build
      - run:
          name: Start openreview-web
          command: |
            cd ~/openreview-web
            export NEXT_PORT=3030
            NODE_ENV=production SUPER_USER=openreview.net npm run start
          background: true
      - run:
          name: Install Firefox driver
          command: |
            sudo apt-get update
            sudo apt-get install firefox
            cd ~/openreview-py-repo/tests/drivers
            wget https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz
            tar -xvzf geckodriver*
            chmod +x geckodriver
      - run:
          name: Run tests
          command: |
            cd ~/openreview-py-repo
            pip install -U pytest
            pip install py
            pip install selenium
            pip install pytest-selenium
            pip install -e .
            TEST_FILES=$(circleci tests glob "tests/test_*.py" | circleci tests split --split-by=timings)
            mkdir test-reports
            pytest --junitxml=test-reports/junit.xml --driver Firefox --driver-path tests/drivers/geckodriver $TEST_FILES
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
  deploy:
    working_directory: ~/openreview-py-repo
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - run:
          name: Deploy to pip
          command: |
            pip install twine
            python setup.py bdist_wheel --universal
            twine upload dist/* --skip-existing
      - run:
          name: Deploy to dev instance
          command: |
            curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer $OPENREVIEW_GITHUB" https://api.github.com/repos/openreview/openreview-py/dispatches -d '{"event_type":"openreview-py-updated"}'
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
